import {
  require_prop_types
} from "./chunk-7YV22TDN.js";
import {
  require_react_is
} from "./chunk-KCPK4NLU.js";
import {
  isPropValid
} from "./chunk-YQJ42W63.js";
import {
  require_react
} from "./chunk-X6JDNPGX.js";
import {
  __publicField,
  __toESM
} from "./chunk-LK32TJAX.js";

// ../../node_modules/@pigment-css/react/build/chunk-TBBSYWTH.mjs
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// ../../node_modules/@pigment-css/react/build/chunk-3Q4RACQ3.mjs
var React = __toESM(require_react(), 1);
var import_prop_types = __toESM(require_prop_types(), 1);
var Box = React.forwardRef(
  (_a, ref) => {
    var _b = _a, {
      as = "div",
      component,
      sx: sx2,
      className,
      style
    } = _b, rest = __objRest(_b, [
      "as",
      // Added to support compatibility with @mui/system
      "component",
      /**
       * The type of the transformed sx prop is either a
       * "string" if the css passed was fully static or an
       * object with the following shape:
       * {
       *  className: string,
       *  vars: Record<string, [string | number, boolean]>
       * }
       */
      "sx",
      "className",
      "style"
    ]);
    const Component = component != null ? component : as;
    const sxClass = typeof sx2 === "string" ? sx2 : sx2 == null ? void 0 : sx2.className;
    const classes = [className, sxClass].filter(Boolean).join(" ");
    const sxVars = sx2 && typeof sx2 !== "string" ? sx2 == null ? void 0 : sx2.vars : {};
    const varStyles = {};
    if (sxVars) {
      Object.entries(sxVars).forEach(([cssVariable, [value, isUnitLess]]) => {
        if (typeof value === "string" || isUnitLess) {
          varStyles[`--${cssVariable}`] = value;
        } else {
          varStyles[`--${cssVariable}`] = `${value}px`;
        }
      });
    }
    const styles = __spreadValues(__spreadValues({}, style), varStyles);
    return React.createElement(Component, __spreadValues({ ref, className: classes, style: styles }, rest));
  }
);
Box.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   * Replacement for the emotion's `as` prop.
   */
  as: import_prop_types.default.elementType,
  /**
   * The content of the component.
   */
  children: import_prop_types.default.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types.default.elementType,
  /**
   * The style extension prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
};
var Box_default = Box;

// ../../node_modules/@pigment-css/react/build/index.mjs
var React15 = __toESM(require_react(), 1);

// ../../node_modules/clsx/dist/clsx.mjs
function r(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e) n += e;
  else if ("object" == typeof e) if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
  } else for (f in e) e[f] && (n && (n += " "), n += f);
  return n;
}
function clsx() {
  for (var e, t, f = 0, n = "", o = arguments.length; f < o; f++) (e = arguments[f]) && (t = r(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_default = clsx;

// ../../node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js
function chainPropTypes(propType1, propType2) {
  if (false) {
    return () => null;
  }
  return function validate(...args) {
    return propType1(...args) || propType2(...args);
  };
}

// ../../node_modules/@mui/utils/esm/elementAcceptingRef/elementAcceptingRef.js
var import_prop_types2 = __toESM(require_prop_types());
function isClassComponent(elementType) {
  const {
    prototype = {}
  } = elementType;
  return Boolean(prototype.isReactComponent);
}
function acceptingRef(props, propName, componentName, location, propFullName) {
  const element = props[propName];
  const safePropName = propFullName || propName;
  if (element == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window === "undefined") {
    return null;
  }
  let warningHint;
  const elementType = element.type;
  if (typeof elementType === "function" && !isClassComponent(elementType)) {
    warningHint = "Did you accidentally use a plain function component for an element instead?";
  }
  if (warningHint !== void 0) {
    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an element that can hold a ref. ${warningHint} For more information see https://mui.com/r/caveat-with-refs-guide`);
  }
  return null;
}
var elementAcceptingRef = chainPropTypes(import_prop_types2.default.element, acceptingRef);
elementAcceptingRef.isRequired = chainPropTypes(import_prop_types2.default.element.isRequired, acceptingRef);

// ../../node_modules/@mui/utils/esm/elementTypeAcceptingRef/elementTypeAcceptingRef.js
var import_prop_types3 = __toESM(require_prop_types());
function isClassComponent2(elementType) {
  const {
    prototype = {}
  } = elementType;
  return Boolean(prototype.isReactComponent);
}
function elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {
  const propValue = props[propName];
  const safePropName = propFullName || propName;
  if (propValue == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window === "undefined") {
    return null;
  }
  let warningHint;
  if (typeof propValue === "function" && !isClassComponent2(propValue)) {
    warningHint = "Did you accidentally provide a plain function component instead?";
  }
  if (warningHint !== void 0) {
    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. Expected an element type that can hold a ref. ${warningHint} For more information see https://mui.com/r/caveat-with-refs-guide`);
  }
  return null;
}
var elementTypeAcceptingRef_default = chainPropTypes(import_prop_types3.default.elementType, elementTypeAcceptingRef);

// ../../node_modules/@mui/utils/esm/getDisplayName/getDisplayName.js
var import_react_is = __toESM(require_react_is());

// ../../node_modules/@mui/utils/esm/ponyfillGlobal/ponyfillGlobal.js
var ponyfillGlobal_default = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();

// ../../node_modules/@mui/utils/esm/refType/refType.js
var import_prop_types4 = __toESM(require_prop_types());
var refType = import_prop_types4.default.oneOfType([import_prop_types4.default.func, import_prop_types4.default.object]);

// ../../node_modules/@mui/utils/esm/isMuiElement/isMuiElement.js
var React2 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js
var React3 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/useId/useId.js
var React4 = __toESM(require_react());
var safeReact = {
  ...React4
};
var maybeReactUseId = safeReact.useId;

// ../../node_modules/@mui/utils/esm/useControlled/useControlled.js
var React5 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js
var React6 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/useForkRef/useForkRef.js
var React7 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js
var React8 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/useOnMount/useOnMount.js
var React9 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/useTimeout/useTimeout.js
var Timeout = class _Timeout {
  constructor() {
    __publicField(this, "currentId", null);
    __publicField(this, "clear", () => {
      if (this.currentId !== null) {
        clearTimeout(this.currentId);
        this.currentId = null;
      }
    });
    __publicField(this, "disposeEffect", () => {
      return this.clear;
    });
  }
  static create() {
    return new _Timeout();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(delay, fn) {
    this.clear();
    this.currentId = setTimeout(() => {
      this.currentId = null;
      fn();
    }, delay);
  }
};

// ../../node_modules/@mui/utils/esm/useIsFocusVisible/useIsFocusVisible.js
var React10 = __toESM(require_react());
var hadFocusVisibleRecentlyTimeout = new Timeout();

// ../../node_modules/@mui/utils/esm/usePreviousProps/usePreviousProps.js
var React11 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/getValidReactChildren/getValidReactChildren.js
var React12 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/integerPropType/integerPropType.js
function getTypeByValue(value) {
  const valueType = typeof value;
  switch (valueType) {
    case "number":
      if (Number.isNaN(value)) {
        return "NaN";
      }
      if (!Number.isFinite(value)) {
        return "Infinity";
      }
      if (value !== Math.floor(value)) {
        return "float";
      }
      return "number";
    case "object":
      if (value === null) {
        return "null";
      }
      return value.constructor.name;
    default:
      return valueType;
  }
}
function requiredInteger(props, propName, componentName, location) {
  const propValue = props[propName];
  if (propValue == null || !Number.isInteger(propValue)) {
    const propType = getTypeByValue(propValue);
    return new RangeError(`Invalid ${location} \`${propName}\` of type \`${propType}\` supplied to \`${componentName}\`, expected \`integer\`.`);
  }
  return null;
}
function validator(props, propName, ...other) {
  const propValue = props[propName];
  if (propValue === void 0) {
    return null;
  }
  return requiredInteger(props, propName, ...other);
}
function validatorNoop() {
  return null;
}
validator.isRequired = requiredInteger;
validatorNoop.isRequired = validatorNoop;

// ../../node_modules/@mui/utils/esm/resolveProps/resolveProps.js
function resolveProps(defaultProps, props) {
  const output = {
    ...props
  };
  for (const key in defaultProps) {
    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {
      const propName = key;
      if (propName === "components" || propName === "slots") {
        output[propName] = {
          ...defaultProps[propName],
          ...output[propName]
        };
      } else if (propName === "componentsProps" || propName === "slotProps") {
        const defaultSlotProps = defaultProps[propName];
        const slotProps = props[propName];
        if (!slotProps) {
          output[propName] = defaultSlotProps || {};
        } else if (!defaultSlotProps) {
          output[propName] = slotProps;
        } else {
          output[propName] = {
            ...slotProps
          };
          for (const slotKey in defaultSlotProps) {
            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {
              const slotPropName = slotKey;
              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);
            }
          }
        }
      } else if (output[propName] === void 0) {
        output[propName] = defaultProps[propName];
      }
    }
  }
  return output;
}

// ../../node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js
var defaultGenerator = (componentName) => componentName;
var createClassNameGenerator = () => {
  let generate = defaultGenerator;
  return {
    configure(generator) {
      generate = generator;
    },
    generate(componentName) {
      return generate(componentName);
    },
    reset() {
      generate = defaultGenerator;
    }
  };
};
var ClassNameGenerator = createClassNameGenerator();

// ../../node_modules/@mui/utils/esm/getReactNodeRef/getReactNodeRef.js
var React13 = __toESM(require_react());

// ../../node_modules/@mui/utils/esm/getReactElementRef/getReactElementRef.js
var React14 = __toESM(require_react());

// ../../node_modules/@pigment-css/react/build/index.mjs
function getVariantClasses(componentProps, variants) {
  const { ownerState = {} } = componentProps;
  const variantClasses = variants.filter(
    ({ props: variantProps }) => typeof variantProps === "function" ? variantProps(__spreadValues(__spreadValues({}, componentProps), componentProps.ownerState)) : Object.entries(variantProps).every(([propKey, propValue]) => {
      return ownerState[propKey] === propValue || componentProps[propKey] === propValue;
    })
  ).map(({ className }) => className);
  return variantClasses;
}
function isHtmlTag(tag) {
  return typeof tag === "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96;
}
var slotShouldForwardProp = (key) => key !== "sx" && key !== "as" && key !== "ownerState";
var rootShouldForwardProp = (key) => slotShouldForwardProp(key) && key !== "classes";
function styled(tag, componentMeta = {}) {
  const { name, slot, shouldForwardProp } = componentMeta;
  let finalShouldForwardProp = shouldForwardProp;
  if (!shouldForwardProp) {
    if (isHtmlTag(tag)) {
      finalShouldForwardProp = isPropValid;
    } else if (slot === "Root" || slot === "root") {
      finalShouldForwardProp = rootShouldForwardProp;
    } else {
      finalShouldForwardProp = slotShouldForwardProp;
    }
  }
  const shouldUseAs = !finalShouldForwardProp("as");
  function scopedStyledWithOptions(options = {}) {
    const { displayName, classes = [], vars: cssVars = {}, variants = [] } = options;
    const StyledComponent = React15.forwardRef(function StyledComponent2(inProps, ref) {
      const _a = inProps, { as, className, sx: sx2, style, ownerState } = _a, props = __objRest(_a, ["as", "className", "sx", "style", "ownerState"]);
      const Component = shouldUseAs && as || tag;
      const varStyles = Object.entries(cssVars).reduce(
        (acc, [cssVariable, [variableFunction, isUnitLess]]) => {
          const value = variableFunction(props);
          if (typeof value === "undefined") {
            return acc;
          }
          if (typeof value === "string" || isUnitLess) {
            acc[`--${cssVariable}`] = value;
          } else {
            acc[`--${cssVariable}`] = `${value}px`;
          }
          return acc;
        },
        {}
      );
      const sxClass = typeof sx2 === "string" ? sx2 : sx2 == null ? void 0 : sx2.className;
      const sxVars = sx2 && typeof sx2 !== "string" ? sx2.vars : void 0;
      if (sxVars) {
        Object.entries(sxVars).forEach(([cssVariable, [value, isUnitLess]]) => {
          if (typeof value === "string" || isUnitLess) {
            varStyles[`--${cssVariable}`] = value;
          } else {
            varStyles[`--${cssVariable}`] = `${value}px`;
          }
        });
      }
      const finalClassName = clsx_default(
        classes,
        sxClass,
        className,
        getVariantClasses(inProps, variants)
      );
      const newProps = {};
      for (const key in props) {
        if (shouldUseAs && key === "as") {
          continue;
        }
        if (finalShouldForwardProp(key)) {
          newProps[key] = props[key];
        }
      }
      return React15.createElement(
        Component,
        __spreadProps(__spreadValues(__spreadValues({}, newProps), Component.__styled_by_pigment_css && { ownerState }), {
          ref,
          className: finalClassName,
          style: __spreadValues(__spreadValues({}, varStyles), style)
        })
      );
    });
    let componentName = displayName;
    if (!componentName && name) {
      componentName = `${name}${slot ? `-${slot}` : ""}`;
    }
    StyledComponent.displayName = `Styled(${componentName})`;
    StyledComponent.__styled_by_pigment_css = true;
    return StyledComponent;
  }
  return scopedStyledWithOptions;
}
function sx(styleObj) {
  return styleObj;
}
function keyframes() {
  throw new Error(
    `${"@pigment-css/react"}: You were trying to call "keyframes" function without configuring your bundler. Make sure to install the bundler specific plugin and use it. @pigment-css/vite-plugin for Vite integration or @pigment-css/nextjs-plugin for Next.js integration.`
  );
}
function generateAtomics() {
  throw new Error(
    `${"@pigment-css/react"}: You were trying to call "generateAtomics" function without configuring your bundler. Make sure to install the bundler specific plugin and use it. @pigment-css/vite-plugin for Vite integration or @pigment-css/nextjs-plugin for Next.js integration.`
  );
}
function atomics({ styles, shorthands, conditions }) {
  function addStyles(cssProperty, values, classes) {
    const styleClasses = styles[cssProperty];
    if (!styleClasses) {
      return;
    }
    if (typeof values === "string") {
      classes.push(styleClasses[values].$$default);
    } else if (Array.isArray(values)) {
      values.forEach((value, index) => {
        classes.push(styleClasses[value][conditions[index]]);
      });
    } else {
      Object.keys(values).forEach((condition) => {
        const propertyClasses = styleClasses[values[condition]];
        if (!propertyClasses) {
          return;
        }
        classes.push(propertyClasses[condition]);
      });
    }
  }
  function generateClass(props) {
    const classes = [];
    const runtimeStyles = __spreadValues({}, props);
    Object.keys(runtimeStyles).forEach((cssProperty) => {
      const values = runtimeStyles[cssProperty];
      if (cssProperty in shorthands) {
        const configShorthands = shorthands[cssProperty];
        if (!configShorthands) {
          return;
        }
        configShorthands.forEach((shorthand) => {
          addStyles(shorthand, values, classes);
        });
      } else {
        addStyles(cssProperty, values, classes);
      }
    });
    return {
      className: clsx_default(Array.from(new Set(classes)))
    };
  }
  return generateClass;
}
function css() {
  throw new Error(
    `${"@pigment-css/react"}: You were trying to call "css" function without configuring your bundler. Make sure to install the bundler specific plugin and use it. @pigment-css/vite-plugin for Vite integration or @pigment-css/nextjs-plugin for Next.js integration.`
  );
}
function createUseThemeProps(nameOrDefaultProps) {
  return function useThemeProps({ props }) {
    if (typeof nameOrDefaultProps === "string") {
      return props;
    }
    const defaultProps = nameOrDefaultProps;
    const output = __spreadValues({}, props);
    Object.keys(defaultProps).forEach((propName) => {
      if (propName.toString().match(/^(components|slots)$/)) {
        output[propName] = __spreadValues(__spreadValues({}, defaultProps[propName]), output[propName]);
      } else if (propName.toString().match(/^(componentsProps|slotProps)$/)) {
        const defaultSlotProps = defaultProps[propName] || {};
        const slotProps = props[propName];
        output[propName] = {};
        if (!slotProps || !Object.keys(slotProps)) {
          output[propName] = defaultSlotProps;
        } else if (!defaultSlotProps || !Object.keys(defaultSlotProps)) {
          output[propName] = slotProps;
        } else {
          output[propName] = __spreadValues({}, slotProps);
          Object.keys(defaultSlotProps).forEach((slotPropName) => {
            output[propName][slotPropName] = resolveProps(
              defaultSlotProps[slotPropName],
              slotProps[slotPropName]
            );
          });
        }
      } else if (output[propName] === void 0) {
        output[propName] = defaultProps[propName];
      }
    });
    return output;
  };
}
export {
  Box_default as Box,
  atomics,
  createUseThemeProps,
  css,
  generateAtomics,
  keyframes,
  styled,
  sx
};
/*! Bundled license information:

@pigment-css/react/build/chunk-TBBSYWTH.mjs:
  (**
    * @pigment-css/react v0.0.9
    *
    * @license MIT
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    *)

@pigment-css/react/build/chunk-3Q4RACQ3.mjs:
  (**
    * @pigment-css/react v0.0.9
    *
    * @license MIT
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    *)

@pigment-css/react/build/index.mjs:
  (**
    * @pigment-css/react v0.0.9
    *
    * @license MIT
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    *)
*/
//# sourceMappingURL=@pigment-css_react.js.map
